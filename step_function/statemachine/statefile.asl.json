{
  "Comment": "Step function for getemails",
  "StartAt": "CheckIfNewDatas",
  "States": {
    "CheckIfNewDatas": {
      "Type": "Task",
      "Resource": "${{ExtractDataHandlerArn}}",
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 3,
          "MaxAttempts": 5,
          "BackoffRate": 1.5
        }
      ],
      "ResultPath": "$.result",
      "Next": "isNewData"
    },
    "isNewData": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.result.continue",
          "BooleanEquals": true,
          "Next": "Iterator"
        },
        {
          "Variable": "$.result.done",
          "BooleanEquals": true,
          "Next": "Restart"
        }
      ],
      "Default": "wait 1 second"
    },
    "Iterator": {
      "Type": "Map",
      "Next": "processedRecordChoice",
      "Iterator": {
        "StartAt": "ProcessRecords",
        "States": {
          "ProcessRecords": {
            "Comment": "make an external api call and provide response",
            "Type": "Task",
            "Resource": "arn:aws:lambda:ap-south-1:748865664014:function:get_new_data",
            "Retry": [
              {
                "ErrorEquals": [
                  "States.ALL"
                ],
                "IntervalSeconds": 3,
                "MaxAttempts": 5,
                "BackoffRate": 1.5
              }
            ],
            "ResultPath": "$.result",
            "End": true
          }
        }
      }
    },
    "wait 1 second": {
      "Type": "Wait",
      "Seconds": 1,
      "Next": "CheckIfNewDatas"
    },
    "processedRecordChoice": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.result.status",
          "StringEquals": "in_progress",
          "Next": "Iterator"
        },
        {
          "Variable": "$.restart.status",
          "StringEquals": "success",
          "Next": "Write emails to DynamoDB"
        }
      ],
      "Default": "Restart"
    },
    "Write emails to DynamoDB": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:putItem",
      "Parameters": {
        "TableName": "UsersDemo",
        "Item": {
          "pk": {
            "S.$": "$.id"
          },
          "email_id": {
            "S.$": "$.email"
          }
        }
      },
      "ResultPath": "$.dynamodbPut",
      "Next": "Restart"
    },
    "Restart": {
      "Type": "Task",
      "Resource": "${{RestartHandlerArn}}",
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 3,
          "MaxAttempts": 5,
          "BackoffRate": 1.5
        }
      ],
      "Next": "Done"
    },
    "Done": {
      "Type": "Pass",
      "End": true
    }
  }
}